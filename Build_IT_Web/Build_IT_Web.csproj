<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>true</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44447</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="10.1.1" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="11.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="6.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="6.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.5" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" Version="6.0.5" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="6.0.5" />
    <PackageReference Include="NSwag.AspNetCore" Version="13.17.0" />
    <PackageReference Include="NSwag.Generation" Version="13.17.0" />
    <PackageReference Include="NSwag.MSBuild" Version="13.17.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore.Filters" Version="7.0.3" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.3.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.3.1" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.24.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\src\assets\images\snow-loads\CylindricalRoof.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\DriftingAtProjectionsObstructions.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalMultispanRoof.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalObstructionOnFlatRoof.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalObstructionOnPitchedOrCurvedRoof.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalOverDoorOrLoadingBay.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalRoofAbuttingToTallerConstruction.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalSnowBehindParapet.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalSnowBehindParapetAtEaves.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\ExceptionalSnowInValleyBehindParapet.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\Monopitch.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\MultispanRoof.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\PitchedRoof.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\RoofAbuttingToTallerConstruction_1.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\RoofAbuttingToTallerConstruction_2.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\Snowguards.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\SnowMapPoland.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\SnowMapPolandLarge.png" />
    <Content Include="ClientApp\src\assets\images\snow-loads\SnowOverhanging.png" />
  </ItemGroup>
  
    <ItemGroup>
      <Folder Include="wwwroot\api\" />
    </ItemGroup>

    <PropertyGroup>
        <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Build_IT_Application\Build_IT_WebApplication.csproj" />
    <ProjectReference Include="..\Build_IT_DataAccess\Build_IT_DataAccess.csproj" />
    <ProjectReference Include="..\Build_IT_WebInfrastructure\Build_IT_WebInfrastructure.csproj" />
  </ItemGroup>

  <Target Name="NSwag" BeforeTargets="AfterBuild" Condition="'$(TF_BUILD)'!='True'">
    <Exec ConsoleToMSBuild="true" ContinueOnError="true" Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)">
      <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput" />
    </Exec>

    <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low" />
    <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'" />
  </Target>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
